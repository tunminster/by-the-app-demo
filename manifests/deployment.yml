apiVersion: apps/v1
kind: Deployment
metadata:
  name: by-the-app-api-demo-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: by-the-app-api-demo
  template:
    metadata:
      labels:
        app: by-the-app-api-demo
    spec:
      containers:
      - name: by-the-app-api-demo
        image: #{repository-image}#
        resources:
          limits:
            memory: "256Mi" # Adjusted memory limit
            cpu: "100m"    # Adjusted CPU limit
        ports:
        - containerPort: 8080
        env:
        - name: OPENAI_API_KEY
          value: #{openai-api-key}#
        - name: API_SECRET_KEY
          value: #{api-secret-key}#
        - name: TWILIO_AUTH_KEY
          value: #{twilio-auth-key}#
        - name: BYTHEAPP_AZURE_STORAGE_CONNECTION_STRING
          value: #{bytheapp-azure-storage-connection-string}#
        - name: KEY_VAULT_NAME
          value: #{key-vault-name}#
        - name: AZURE_CLIENT_ID
          value: #{app-dev-client-id}#
        - name: AZURE_CLIENT_SECRET
          value: #{app-dev-secret}#
        - name: AZURE_TENANT_ID
          value: #{app-dev-tenant-id}#
        - name: SQLALCHEMY_DATABASE_URI
          value: #{sqlalchemy-database-uri}#
        - name: FLASK_ENV
          value: development
        - name: SECRET_KEY
          value: #{db-secret-key}#
        - name: POSTGRES_DB
          value: defaultdb
        - name: POSTGRES_USER
          value: avnadmin
        - name: POSTGRES_PASSWORD
          value: #{POSTGRES-PASSWORD}#
        - name: POSTGRES_HOST
          value: #{POSTGRES-HOST}#
        - name: POSTGRES_PORT
          value: "28370"
      imagePullSecrets:
        - name: #{acr-secret-name}#

---
apiVersion: v1
kind: Service
metadata:
  name: by-the-app-api-demo-service
spec:
  selector:
    app: by-the-app-api-demo
  ports:
  - port: 80
    targetPort: 8080


---
  apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: by-the-app-api-demo-ingress
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/upgrade: "websocket"
      nginx.ingress.kubernetes.io/connection: "upgrade"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "120"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"

    name: by-the-app-api-demo-ingress
    namespace: #{env-namespace}#
  spec:
    ingressClassName: nginx   # <-- use official ingress class
    tls:
    - hosts:
      - api-demo.bytheapp.com
      secretName: bytheappdemo-ingress-tls
    rules:
      - host: #{host-url}#
        http:
          paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: by-the-app-api-demo-service
                  port:
                    number: 80



