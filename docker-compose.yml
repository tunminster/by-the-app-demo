version: '3.8'

services:
  # Voice API Service
  voice-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - KAFKA_SSL_CA_FILE=/app/certs/ca.pem
      - KAFKA_SSL_CERT_FILE=/app/certs/service.cert
      - KAFKA_SSL_KEY_FILE=/app/certs/service.key
    volumes:
      - ./certs:/app/certs
    depends_on:
      - kafka-consumer
    restart: unless-stopped

  # Kafka Consumer Service
  kafka-consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - KAFKA_GROUP_ID=${KAFKA_GROUP_ID}
      - KAFKA_SSL_CA_FILE=/app/certs/ca.pem
      - KAFKA_SSL_CERT_FILE=/app/certs/service.cert
      - KAFKA_SSL_KEY_FILE=/app/certs/service.key
    volumes:
      - ./certs:/app/certs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
